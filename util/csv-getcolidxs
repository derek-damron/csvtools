#! /bin/bash

DELIM=','
while getopts h?r:d:c: OPT; do
    case $OPT in
        \?|h)
            echo "csv-getcolidxs:  Get the indices of multiple columns in a delimited file."
            echo "useage:"
            echo "  csv-getcolidxs -r <header string> [-d <delim>] <column names>"
            exit 0
            ;;
        d)
            DELIM=$OPTARG
            ;;
        r)
            HEADER=$OPTARG
            ;;
    esac
done

if [[ $HEADER == '' ]]; then
    echo "csv-getcolidxs: Argument -r required." >&2
    exit 1
fi

# Shift the argument pointer so that the passed coumns are stored in $1, $2, etc
shift $(($OPTIND - 1))

COLS="${@:1}"
if [[ $COLS == '' ]]; then
    echo "csv-cut: No columns to cut" >&2
    exit 1
fi
OUTSTR=""

# Iteratively get the index of the columns requested, and join them into
# a comma seperated string.
for COLNM in $COLS; do
  COLIDX=$(csv-getcolidx -d $DELIM -r $HEADER -c $COLNM)
  if [[ $? != 0 ]]; then
      echo "csv-getcolidxs: Field $COLNM not found, terminating."
      exit 1
  fi
  OUTSTR="$OUTSTR,$COLIDX"
done;

# Replace the beginning comma with nothing (fencepost problem), replace
# all remaining commas with spaces to make a nice argument list for a 
# command line call.
echo $OUTSTR | sed "s/,//" | sed "s/,/ /g"

exit 0
